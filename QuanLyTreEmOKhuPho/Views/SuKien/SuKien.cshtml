
@{
    ViewBag.Title = "SuKien";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/css/media.css" rel="stylesheet" />
<link href="~/Content/css/SuKien.css" rel="stylesheet" />




<!-- Page Header -->
<div class="page-header">
    <div class="header-content">
        <div class="page-title">
            <h1><i class="fa-solid fa-star"></i> Quản Lý Sự Kiện</h1>
            <p>Tổ chức và theo dõi các hoạt động thiếu nhi tại khu phố</p>
        </div>
        <button class="btn btn-primary" onclick="openCreateEventModal()">
            <i class="fa-solid fa-circle-plus"></i> Tạo sự kiện mới
        </button>
    </div>
</div>

<!-- Filter Tabs -->
<div class="filter-tabs">
    <button class="filter-tab active" onclick="filterEvents('all')">
        <i class="fa-solid fa-bars"></i> Tất cả (18)
    </button>
    <button class="filter-tab" onclick="filterEvents('upcoming')">
        <i class="fa-solid fa-calendar-days"></i> Sắp diễn ra (6)
    </button>
    <button class="filter-tab" onclick="filterEvents('ongoing')">
        <i class="fa-solid fa-hourglass-half"></i> Đang diễn ra (2)
    </button>
    <button class="filter-tab" onclick="filterEvents('completed')">
        <i class="fa-solid fa-circle-check"></i> Đã kết thúc (10)
    </button>
</div>

<!-- Events Grid -->
<div class="events-grid" id="eventsGrid"></div>


<script>
        // Sample events data
        const eventsData = [
            {
                id: 1,
                title: 'Ngày hội Trung thu 2025',
                date: '15/10/2025',
                time: '08:00 AM',
                location: 'Sân trường TH Khu phố 2',
                status: 'upcoming',
                volunteers: 25,
                children: 120,
                icon: '🏮'
            },
            {
                id: 2,
                title: 'Khám sức khỏe định kỳ',
                date: '22/10/2025',
                time: '07:30 AM',
                location: 'Trạm y tế Khu phố 5',
                status: 'upcoming',
                volunteers: 15,
                children: 85,
                icon: '🏥'
            },
            {
                id: 3,
                title: 'Trao học bổng học kỳ I',
                date: '28/10/2025',
                time: '09:00 AM',
                location: 'Hội trường Ủy ban',
                status: 'upcoming',
                volunteers: 10,
                children: 45,
                icon: '🎓'
            },
            {
                id: 4,
                title: 'Ngày hội thể thao',
                date: '05/10/2025',
                time: '08:00 AM',
                location: 'Sân vận động KP',
                status: 'ongoing',
                volunteers: 30,
                children: 150,
                icon: '⚽'
            },
            {
                id: 5,
                title: 'Workshop kỹ năng sống',
                date: '04/10/2025',
                time: '14:00 PM',
                location: 'Trung tâm văn hóa',
                status: 'ongoing',
                volunteers: 8,
                children: 40,
                icon: '📚'
            },
            {
                id: 6,
                title: 'Ngày hội môi trường',
                date: '15/09/2025',
                time: '07:00 AM',
                location: 'Công viên KP2',
                status: 'completed',
                volunteers: 35,
                children: 180,
                icon: '🌱'
            },
            {
                id: 7,
                title: 'Đêm hội trăng rằm tháng 8',
                date: '01/09/2025',
                time: '18:00 PM',
                location: 'Sân trường TH KP1',
                status: 'completed',
                volunteers: 20,
                children: 100,
                icon: '🌕'
            },
            {
                id: 8,
                title: 'Hè vui khỏe 2025',
                date: '15/07/2025',
                time: '08:00 AM',
                location: 'Hồ bơi KP',
                status: 'completed',
                volunteers: 25,
                children: 95,
                icon: '🏊'
            }
        ];

        // Render events
        function renderEvents(filter = 'all') {
            const grid = document.getElementById('eventsGrid');
            grid.innerHTML = '';

            const filtered = filter === 'all'
                ? eventsData
                : eventsData.filter(e => e.status === filter);

            filtered.forEach(event => {
                const statusText = {
                    'upcoming': 'Sắp diễn ra',
                    'ongoing': 'Đang diễn ra',
                    'completed': 'Đã kết thúc'
                }[event.status];

                const statusClass = {
                    'upcoming': 'status-upcoming',
                    'ongoing': 'status-ongoing',
                    'completed': 'status-completed'
                }[event.status];

                const card = document.createElement('div');
                card.className = 'event-card';
                card.onclick = () => viewEvent(event.id);

                card.innerHTML = `
                    <div class="event-image">
                        <span style="font-size: 80px;">${event.icon}</span>
                        <div class="event-status ${statusClass}">${statusText}</div>
                    </div>
                    <div class="event-content">
                        <h3 class="event-title">${event.title}</h3>
                        <div class="event-meta">
                            <div class="meta-item">
                                <span class="meta-icon">📅</span>
                                <span>${event.date} - ${event.time}</span>
                            </div>
                            <div class="meta-item">
                                <span class="meta-icon">📍</span>
                                <span>${event.location}</span>
                            </div>
                        </div>
                        <div class="event-stats">
                            <div class="stat-item">
                                <span>👥</span>
                                <span><span class="stat-value">${event.volunteers}</span> TNV</span>
                            </div>
                            <div class="stat-item">
                                <span>👶</span>
                                <span><span class="stat-value">${event.children}</span> Trẻ em</span>
                            </div>
                        </div>
                        <div class="event-actions">
                            <button class="btn btn-sm btn-view">👁️ Xem chi tiết</button>
                            <button class="btn btn-sm btn-edit" onclick="event.stopPropagation(); editEvent(${event.id})">✏️ Sửa</button>
                        </div>
                    </div>
                `;

                grid.appendChild(card);
            });
        }

        // Filter events
        function filterEvents(status) {
            const tabs = document.querySelectorAll('.filter-tab');
            tabs.forEach(tab => tab.classList.remove('active'));
            event.target.classList.add('active');
            renderEvents(status);
        }

        // View event detail
        function viewEvent(id) {
            document.getElementById('eventDetailModal').classList.add('active');
            showNotification('Đang tải thông tin sự kiện...', 'info');
        }

        // Edit event
        function editEvent(id) {
            showNotification(`Chỉnh sửa sự kiện #${id}`, 'info');
        }

        // Close modal
        function closeModal() {
            document.getElementById('eventDetailModal').classList.remove('active');
        }

        // Open create event modal
        function openCreateEventModal() {
            showNotification('Mở form tạo sự kiện mới', 'info');
        }

        // Switch tabs
        function switchTab(index) {
            const tabs = document.querySelectorAll('.tab');
            const contents = document.querySelectorAll('.tab-content');

            tabs.forEach(tab => tab.classList.remove('active'));
            contents.forEach(content => content.classList.remove('active'));

            tabs[index].classList.add('active');
            contents[index].classList.add('active');
        }

        // Notification system
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            const icons = { success: '✓', warning: '⚠', info: 'ℹ', danger: '✕' };
            const colors = {
                success: 'var(--success)',
                warning: 'var(--warning)',
                info: 'var(--primary)',
                danger: 'var(--danger)'
            };

            notification.innerHTML = `
                <div style="display: flex; align-items: center; gap: 12px;">
                    <span style="font-size: 20px;">${icons[type]}</span>
                    <span>${message}</span>
                </div>
            `;

            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: white;
                padding: 16px 24px;
                border-radius: 12px;
                box-shadow: 0 10px 40px rgba(0,0,0,0.2);
                z-index: 10001;
                animation: slideIn 0.3s ease;
                border-left: 4px solid ${colors[type]};
                max-width: 400px;
            `;

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.style.animation = 'slideOut 0.3s ease';
                setTimeout(() => notification.remove(), 300);
            }, 3000);
        }

        // Animation styles
        const style = document.createElement('style');
        style.textContent = `
            @@keyframes slideIn {
                from { transform: translateX(400px); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
            @@keyframes slideOut {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(400px); opacity: 0; }
            }
        `;
        document.head.appendChild(style);

        // Close modal on outside click
        document.getElementById('eventDetailModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        // Initialize
        renderEvents();

        // Animate expense bars
        window.addEventListener('load', () => {
            setTimeout(() => {
                document.querySelectorAll('.expense-fill').forEach(fill => {
                    const width = fill.style.width;
                    fill.style.width = '0';
                    setTimeout(() => {
                        fill.style.width = width;
                    }, 100);
                });
            }, 500);
        });
</script>